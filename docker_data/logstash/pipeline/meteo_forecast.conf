input {
  http_poller {
    id => "meteo_forecast_httppoller_input"
    codec => json
    urls => {
      # Get 5days/3hours meteo forecast 
      forecast5 => {
        method => get
        url => "http://api.openweathermap.org/data/2.5/forecast?appid=${OPENWEATHERMAP_APPID}&id=3177090&units=metric&lang=it"
      }
    }
    # schedule => { every => "30s"}
    # Daily schedule at 18.30
    schedule => { cron => "30 18 * * *"}
  }
}

filter {
  uuid {
    id => "logs_uuid_filter"
    target => "uuid"
  }

  split {
    id => "meteo_forecast_split_filter"
    field => "list"
  }

  ruby {
    id => "meteo_forecast_ruby_filter"
    # copy (nested) fields in list to root
    code => "
      event.get('list').each {|k, v|
        event.set(k,v)
      }
      event.remove('list')
    "
  }

  date {
    id => "meteo_forecast_date_filter"
    # convert timestamp to date
    match => ["dt", "UNIX"]
    timezone => "Europe/Rome"
  }
  
  mutate {
    id => "meteo_forecast_mutate_filter"
    # copy only important fields
    copy => {
      "[city][id]" => "city_id"
      "[city][name]" => "city_name"
      "[city][coord]" => "coord"
      "[main][temp]" => "temp"
      "[main][feels_like]" => "temp_feels_like"
      "[main][temp_min]" => "temp_min"
      "[main][temp_max]" => "temp_max"
      "[main][pressure]" => "pressure"
      "[main][sea_level]" => "pressure_sea_level"
      "[main][grnd_level]" => "pressure_grnd_level"
      "[main][humidity]" => "humidity"
      "[wind][speed]" => "wind_speed"
      "[wind][deg]" => "wind_direction"
      "[clouds][all]" => "cloudiness"
      "[rain][3h]" => "rain_3h"
      "[snow][3h]" => "snow_3h"
      "[weather][0][description]" => "description"
    }
    # remove unused fields
    remove_field => ["cod", "message", "cnt", "city", "main", "wind", "clouds", "rain", "snow", "sys", "weather", "dt"]
  }
}

output {
  elasticsearch {
    id => "meteo_forecast_elasticsearch_output"
    hosts => ["elasticsearch:9200"]
    document_id => "%{uuid}_%{dt_txt}"
    index => "meteo_forecast"
  }

  stdout { codec => rubydebug }
}
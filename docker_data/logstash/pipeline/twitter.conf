input {
  twitter {
    id => "twitter_twitter_input"
    consumer_key => "${TWITTER_CONSUMER_KEY}"
    consumer_secret => "${TWITTER_CONSUMER_SECRET}"
    oauth_token => "${TWITTER_OAUTH_TOKEN}"
    oauth_token_secret => "${TWITTER_OAUTH_TOKEN_SECRET}"
    full_tweet => true
    ignore_retweets => true
    # use_samples => true # get small sample of tweets
    keywords => ["CORONAVIRUS","COVID-19","COVID19","coronavirus","covid-19","covid19"]
    languages => ["en"]
  }
}

filter {
  # Exclude tweets missing text/location
  if ![extended_tweet][full_text] {
    drop {}
  }
  if ![user][location] {
    drop {}
  }

  date {
    id => "twitter_date_filter"
    # convert timestamp to date
    match => ["timestamp_ms", "UNIX_MS"]
    target => "tweet_created_at"
  }

  mutate {
    id => "twitter_mutate_filter"
    # copy only important fields
    copy => {
      "[user][name]" => "user_name"
      "[user][screen_name]" => "user_screen_name"
      "[user][location]" => "user_location"
      "[extended_tweet][full_text]" => "tweet_full_text"
    }

    # remove unused fields
    remove_field => ["id", "lang", "truncated", "text", "geo", "retweeted", "in_reply_to_user_id", "created_at", "quote_count", "retweet_count", "in_reply_to_screen_name", "favorite_count", "is_quote_status", "entities", "in_reply_to_status_id", "contributors", "in_reply_to_status_id_str", "in_reply_to_user_id_str", "id_str", "user", "reply_count", "favorited", "filter_level", "timestamp_ms", "source", "coordinates", "extended_tweet", "place", "display_text_range", "possibly_sensitive", "quoted_status_id_str", "quoted_status_permalink", "quoted_status_id", "quoted_status", "extended_entities"]
  }
}

output {
  kafka {
    id => "twitter_kafka_output"
    codec => json
    topic_id => "twitter"
    bootstrap_servers => "kafka:9094"
  }

  # stdout { codec => rubydebug }
}